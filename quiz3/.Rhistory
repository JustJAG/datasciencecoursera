q()
library(xlsx)
library(xlsx)
swirl()
library(swirl)
swirl()
5+7
X<-5+7
x<- 5+7
x
y<- x-3
y
library(xlsx)
install.packages("RMySQL")
library(RMySQL)
library(xlsx)
install.packages(“RMySQL”, type = “source”)
?install.packages
install.packages(“RMySQL”, type = “source”)
install.packages(lib= “RMySQL”, type = “source”)
install.packages(pkgs= “RMySQL”, type = “source”)
install.packages(“RMySQL”)
install.packages(RMySQL, type = “source”)
install.packages(RMySQL)
install.packages("RMySQL")
library(RMySQL)
con <- dbConnect(MySQL(), host="127.0.0.1", port= 3306, user="user",
password = "password", dbname="db")
ucscDb<- dbConnect(MySQL(),user="genome", host = "genome-mysql.cse.ucsc.edu")
result<- dbGetQuery(ucscDb,"show databases"); dbDisconnect(ucscDb);
View(result)
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
created = h5createFile("example.h5")
created
install.packages("jsonlite")
library(jsonlite)
install.packages("httpuv")
library(httpuv)
install.packages("httr")
library(httr)
oauth_endpoints("github")
# Change based on your appname, key, and secret
myapp <- oauth_app(appname = "Youtube_Michael_Galarnyk",
key = "8758a6bf9a146e1da0c1",
secret = "b9504edde46b794414495bd9c33ea28cbfd87824")
# Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
oauth_endpoints("github")
# Change based on your appname, key, and secret
myapp <- oauth_app(appname = "Youtube_Michael_Galarnyk",
key = "8758a6bf9a146e1da0c1",
secret = "b9504edde46b794414495bd9c33ea28cbfd87824")
# Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
oauth_endpoints("github")
myapp <- oauth_app(appname = "Youtube_Michael_Galarnyk",
key = "8758a6bf9a146e1da0c1",
secret = "b9504edde46b794414495bd9c33ea28cbfd87824")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(swirl)
swirl()
quantile(pack_sum$count, probs = 0.99)
View(pack_sum)
?filter
filter(pack_sum, count > 679)
top_counts<-filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted<-arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique<-filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted<-arrange(top_unique, desc(unique))
View(top_unique_sorted)
View(cran)
submit()
submit()
play()
?group_by
nxt()
submit()
View(result3)
submit()
play()
?mutate
nxt()
submit()
sumbit()
submit()
submit()
reset()
swirl()
submit()
submit()
submit()
library(swirl)
swirl()
library(tidyr)
students
?gather
gather( students, sex, count, -grade)
students2
res<-gather(students2,sex_class, count)
res<-gather(students2,sex_class, count,-grade)
res
?separate
separate(res, sex_class, into=c("sex", "class"))
submit()
students3
View(students3)
submit()
?spread
submit()
submit()
library(readr)
?parse_number
parse_number("class5")
submit()
students4
submit()
submit()
submit()
passed
failed
passed<-mutate(passed, status="passed")
failed<-mutate(failed, status="failed")
?bind_rows
bind_rows(passed,failed)
sat
submit()
?separate
submit()
submit()
?group_by
submit
submit()
fileUrl<- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
getwd()
setwd("Documents/datasciencecoursera/quiz3")
setwd("C:/Users/ajumabayev/Documents/datasciencecoursera/quiz3")
setwd("C:/Users/ajumabayev/Documents/datasciencecoursera/quiz3")
download.file("C:/Users/ajumabayev/Documents/datasciencecoursera/quiz3")
?download.file
download.file(fileUrl, destfile=.,method="curl")
download.file(fileUrl, destfile=./data.csv,method="curl")
download.file(fileUrl, destfile=data.csv,method="curl")
download.file(fileUrl, destfile="./data.csv",method="curl")
download.file(fileUrl, destfile="./data.csv")
communities<-read.csv("data.csv")
View(communities)
class(communities)
agricultureLogical <- subset(communities, ACR==1 & ADJUST>10000)
View(agricultureLogical)
which(agricultureLogical)
?which
which(communities$ACR==1 & communities$ADJUST>10000)
a<-which(communities$ACR==1 & communities$ADJUST>10000)
?isTRUE
b<-isTRUE(which(communities$ACR==1 & communities$ADJUST>10000))
which(a)
c<-communities$ACR==1 & communities$ADJUST>10000
which(c)
d<-communities$ACR==1 & communities$HINCP>10000
which(d)
d<-communities$ACR==3 & communities$HINCP>10000
which(d)
install.packages("jpeg")
library(jpeg)
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(fileUrl, destfile="./jpeg.jpg")
?quantile
quantile("jpeg.jpg", probs=seq(0.3,0.8),native=TRUE)
quantile("jpeg.jpg", c(0.3,0.8),native=TRUE)
img.n <- readJPEG(system.file("img", "jpeg.jpg", package="jpeg"), TRUE)
img.n <- readJPEG(system.file("img", "jeff.jpg", package="jpeg"), TRUE)
img.n <- readJPEG(system.file("jeff.jpg", package="jpeg"), TRUE)
img.n <- readJPEG("jeff.jpg", TRUE)
quantile(img.n, probs=seq(0.3,0.8))
quantile(img.n, probs=seq(0.8))
quantile(img.n, probs=seq(0.2,0.8))
quantile(img.n, probs=seq(0.8,0.2))
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileUrl, destfile="./gdp.csv")
gdp<-read.csv("gdp.csv")
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl, destfile="./g2.csv")
gdp2<-read.csv("g2.csv")
View(gdp)
View(gdp2)
library("dplyr")
colnames(gdp)[1] <- "CountryCode"
View(gdp)
gdp3<-left_join(gdp, gdp2, by= c("CountryCode"))
View(gdp3)
x<-gdp3$Short.Name
x(na.rm=TRUE)
x <- x[!is.na(x)]
x
arrange(gdp3, desc(Gross.domestic.product.2012))
gdp4<-arrange(gdp3, desc(Gross.domestic.product.2012))
View(gdp4)
gdp5<-arrange(gdp3, desc(X.3))
View(gdp5)
