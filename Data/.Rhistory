t4
class(t4)
Sys.time()>t1
Sys.time()-t1
difftime(Sys.time(), t1, units = 'days')
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors<- flags[,11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors,mean)
flag_shapes<- flags[,19:23]
lapply(flag_shapes, range)
shape_mat<-sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals<-lapply(flags, unique)
unique_vals
lapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags,unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags,class)
vapply(flags, class, character(1))
?tapply(vector, index, function)
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
play()
getwd()
nxt()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20,10)
LETTERS
sample(LETTERS)
flips<-sample(c(0,1),replace=TRUE, prob=c(0.3,0.7))
flips <- sample(c(0,1), 100,replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
play()
rbinom(1, size = 100, prob = 0.7)
rbinom(1, size = 100, prob = 0.7)
rbinom(1, size = 100, prob = 0.7)
rbinom(1, size = 100, prob = 0.7)
rbinom(1, size = 100, prob = 0.7)
rbinom(1, size = 100, prob = 0.7)
nxt()
flips2<- 100*rbinom(1, size = 1, prob = 0.7)
flips2<- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, 100,25)
rpois(5, 10)
my_pois<-replicate(100,rpois(5,10))
my_pois
cm<-colMeans(my_pois)
hist(cm)
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(y = cars$speed, x = cars$dist)
plot(x = cars$speed, y = cars$dist)
plot(x = cars$speed, y = cars$dist, xlab="Speed")
plot(x = cars$speed, y = cars$dist, xlab="Speed",ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab="Speed",ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab="Speed",ylab="Stopping Distance", main="My Plot")
plot(cars, main = "My Plot")
plot(cars, main = "My Plot",sub="My Plot Subtitle")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col=2)
plot(cars, xlim=c(10,15))
plot(cars, pch=2)
dat(mtcars)
data(mtcars)
?boxplot
boxplot(mpg~cyl, data=mtcars)
hist(mtcars$mpg)
getwd()
setwd("C:/Users/ajumabayev/Documents/datasciencecoursera")
list.files()
setwd("C:/Users/ajumabayev/Documents/datasciencecoursera/ProgrammingAssignment3")
getwd()
list.files()
rm(list=ls())
outcomes <- read.csv("outcome-of-care-measures.csv")
##delete everything except state and outcomes
keeps <- c("State","Hospital.Name", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure", "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia")
y<-outcomes[keeps]
View(y)
'NY' %in% y
'NY' %in% y[,1]
arrangedData <- arrange(y, y[,3], State)
library(plyr)
install.packages("plyr")
library(plyr)
arrangedData <- arrange(y, y[,3], State)
View(arrangedData)
?sapply
source("besthospital.R")
best("TX", "heart attack")
best("sTX", "heart attack")
best("TX", "hearsdt attack")
best("TX", outcome="heart attack")
best("MD", "pneumonia")
debugonce(best)
debug(best)
debug(best)
best("MD", "pneumonia")
best("MD", "pneumonia")
best("MD", "pneumonia")
Ð™
best("MD", "pneumonia")
Q
undebug(best)
best("MD", "pneumonia")
best("MD", "pneumonia")
best("MD", "heart attack")
print"as"
print(as)
?print
print("asd")
print(arrangedData[1,2])
best("MD", "heart attack")
best("MD", "heart attack")
best("MD", "heart attack")
best("MD", "pneumonia")
best("MD", "pneumonia")
"hello" %in% "hello"
"hello" %in% "helo"
best("MD", "pneumonia")
debugonce(best)
best("MD", "pneumonia")
rm(list=ls())
source("best.R")
source("besthospital.R")
best("MD", "pneumonia")
debugonce(best)
best("MD", "pneumonia")
View(arrangedData)
View(arrangedData)
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
a<-c(1,2,3,4)
a(1)
a[2]
a[-1]
print(a[2])
a[2]
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
debugonce(rankhospital)
rankhospital("TX", "heart failure", 4)
View(arrangedData)
rankhospital("TX", "heart failure", 4)
undebug(rankhospital)
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
debugonce(rankhospital)
rankhospital("TX", "heart failure", 4)
View(rankhospital)
n
debug(rankhospital)
rankhospital("TX", "heart failure", 4)
rankhospital("TX", "heart failure", 4)
debugonce(rankhospital)
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
debugonce(rankhospital)
rankhospital("TX", "heart failure", 4)
View(arrangedData)
outcomes <- read.csv("outcome-of-care-measures.csv")
##delete everything except state and outcomes
keeps <- c("State","Hospital.Name", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure", "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia")
y<-outcomes[keeps]
library(plyr)
arrangedData <- arrange(y,y[,5], State)
vector <- c()
arrangedData[1,2]
vector<-c(vector, arrangedData[1,2])
class(arrangedData[1,2])
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
rankhospital("MD", "heart attack", "worst")
source("rankhospital.R")
rankhospital("MD", "heart attack", "worst")
View(y)
source("besthospital.R")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("NY", "hert attack")
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
debugonce(rankhospital)
rankhospital("MD", "heart attack", "worst")
View(arrangedData)
rankhospital("TX", "heart failure", 4)
debugonce(rankhospital)
rankhospital("TX", "heart failure", 4)
View(arrangedData)
View(arrangedData)
class(arrangedData[,3])
y[,3:5] = apply(y[,3:5], 2, function(x) as.numeric(as.character(x)))
View(y)
y[!is.finite(m)] <- 1000000
y[!is.finite(y)] <- 1000000
y[!is.finite(y[,3:5])] <- 1000000
library(functional)
install.packages("functional")
library(functional)
y[!is.finite(y)] <- 1000000
y[!is.finite(y[,3:5])] <- 1000000
y[!is.finite(y[,3])] <- 1000000
View(y)
colSums(is.Na(y))
colSums(is.na(y))
z <- na.omit(y[,3])
z <- y[complete.cases(y[,3]), ]
colSums(is.na(z))
x <- y[complete.cases(y[,4]), ]
c <- y[complete.cases(y[,5]), ]
colSums(is.na(x))
colSums(is.na(c))
class(y[,3])
View(y)
?rm
rm(list=ls())
##read CSV
outcomes <- read.csv("outcome-of-care-measures.csv")
##delete everything except state and outcomes
keeps <- c("State","Hospital.Name", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure", "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia")
y<-outcomes[keeps]
class(y[,3])
y <- y[complete.cases(y[,3]), ]
class(y[,3])
colSums(is.na(y))
str(y)
z<-y
z[,3:5] <- as.numeric(as.character(z[,3:5]))
x<- z[complete.cases(z[,3:5]),]
x<- z[complete.cases(z[,3]),]
class(z[,3])
class(z[,1])
z[,1]<-as.character(z[,1])
class(z[,1])
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
debugonce(rankhospital)
rankhospital("TX", "heart failure", 4)
rm(list=ls())
outcomes <- read.csv("outcome-of-care-measures.csv")
##delete everything except state and outcomes
keeps <- c("State","Hospital.Name", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure", "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia")
y<-outcomes[keeps]
y[,3:5] <- as.numeric(as.character(y[,3:5]))
y[,2]<-as.character(y[,2])
z <- y[complete.cases(y[,3]), ]
z <- y[!complete.cases(y[,3]), ]
z <- y[complete.cases(y[,3]), ]
z<-outcomes[keeps]
x <- z[complete.cases(z[,3]), ]
View(x)
View(outcomes)
View(y)
View(y)
View(y)
View(z)
z[,3] <- as.numeric(as.character(z[,3]))
View(z)
View(x)
View(z)
View(z)
z <- z[complete.cases(z[,3]), ]
View(z)
rm(list=ls())
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
source("best.R")
source("besthospital.R")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
outcomes <- read.csv("outcome-of-care-measures.csv")
##delete everything except state and outcomes
keeps <- c("State","Hospital.Name", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure", "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia")
y<-outcomes[keeps]
y[,2]<-as.character(y[,2])
str(y)
str(y$State)
summary(y$State)
z<-colnames(y$State)
z<-y$State
z
x<-summary(y$State)
x<-colnames(summary(y$State))
z
z[!duplicated(z)]
u<-z[!duplicated(z)]
u
u[1]
u[54]
u[53]
df<- data.frame("Hospital", "State")
View(df)
df<- data.frame("Hospital"=c(), "State"=c())
View(df)
str(df)
df[["State"]]
head(df)
df2<-rbind(df, list("hosp","state"))
View(df2)
list<- c()
list<-c(list, u[1])
list<-c(list, u[2])
list<-c(list, u[3])
list<-c(list, u[4])
u<-as.character(u)
list<-c()
list<-c(list, u[1])
list<-c(list, "hospt")
df<-rbind(df, list)
View(df)
list<-c()
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
u<-u[order(u)]
u
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
debugonce(rankall)
head(rankall("heart attack", 20), 10)
undebug(rankall)
View(df)
list<-list("1","2")
df<-rbind(df,list)
list<-c()
list<-c(u[2], "ashajs")
df<-rbind(df,list)
View(y)
list<-c(u[2],u[3])
df<-rbind(df,list)
class(df[,2])
df<-data.frame()
class(df[,2])
df<-rbind(df,list)
class(df[,1])
df[,1]<-as.character(df[,1])
?`data.frame
()
Q
?data.frame
df<-data.frame(stringsAsFactors=FALSE)
list<-c(u[2],u[3])
df<-rbind(df,list)
df<-as.character(df)
rm(list=ls())
source("rankall.R")
head(rankall("heart attack", 20), 10)
outcomes <- read.csv("outcome-of-care-measures.csv")
##delete everything except state and outcomes
keeps <- c("State","Hospital.Name", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure", "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia")
y<-outcomes[keeps]
z<-y$State
s<-z[!duplicated(z)]
s<-as.character(s)
s<-s[order(s)]
y[,2]<-as.character(y[,2])
list<-c(s[1],s[2])
df<-data.frame(list)
View(df)
df<-data.frame(stringsAsFactors=FALSE)
df<-rbind(df,list)
View(df)
df[,1]<-as.character(df[,1])
df[,2]<-as.character(df[,2])
df<-rbind(df, list)
View(outcomes)
debugonce(rankall)
head(rankall("heart attack", 20), 10)
vector
vector
source("rankall.R")
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
source(besthospital.R)
source(besthospital)
source("besthospital.R")
source("rankhospital.R")
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
View(r)
as.character(subset(r, r[,1] == "HI")$hospital)
subset(r, r[,1] == "HI")$hospital
r <- rankall("pneumonia", "worst")
View(r)
r <- rankall("heart failure", 10)
View(r)
setwd("../")
install_from_swirl("Getting and Cleaning Data")
install_from_swirl("Getting and Cleaning Data")
dir.create("Data")
setwd("./Data")
getwd()
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl,destfile = "./comm.csv")
list.files()
read.csv2("comm.csv")
x<-read.csv2("comm.csv")
View(x)
?read.csv2
x<-read.csv2("comm.csv", sep=",")
View(x)
y<-x[,7>1000000]
View(x)
y<-x[,x$ADJUST>1000000]
y<-x[x$ADJUST>1000000,]
View(y)
View(y)
y<-x$ADJUST>1000000
z<-y<1000000
y<-x[,x$HINCP>1000000]
y<-x[x$HINCP>1000000,]
y<-x[x$VAL>1000000,]
class(x$VAL)
y<-x$VAL
y
y<-x(x$VAL==24,)
y<-x[x$VAL==24,]
y<-x[,x$VAL==24]
y<-x[x$VAL==24,]
answer1 <- nrow(subset(x, VAL == 24))
head(x)
class(x$FES)
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(fileUrl,destfile = "./gas.xlsx")
list.files()
library(xlsx)
install.packages("xlsx")
library(xlsx)
library(xlsx)
library(rJava)
download.file(fileUrl,destfile = "./gas.xlsx")
x<-read.xlsx("./gas.xlsx")
library(xlsx)
install.packages("xlsxjars")
library(xlsx)
install.packages("xlsx")
library(xlsx)
