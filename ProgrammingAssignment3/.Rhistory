getwd
getwd()
getwd(
)
getwd()
q()
getwd()
setwd("/Users/ajumabayev/Documents/specdata")
setwd("/Users/ajumabayev/Documents/specdata")
library(datasets)
data(iris)
?iris
data(iris)
iris
view(iris)
head(iris)
s <- split(iris, iris$Species)
View(s)
str(s)
lapply(s, function(x) {
+ colMeans(x[, c("Sepal.Length)])
+ })
end
/
#ss
end
clear
//
s
head(s)
ss
?
library(datasets)
data(iris)
s <- split(iris, iris$Species)
>
>>>>
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
}
View(cacheSolve)
pwd
pwd()
cd()
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
setwd()
getwd()
setwd("C:/Users/ajumabayev/Documents/datasciencecoursera/ProgrammingAssignment3")
getwd()
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
View(outcome)
head(outcome)
str(outcome)
outcome[, 11] <- as.numeric(outcome[, 11])
hist(outcome[, 11])
?split
x<- split(outcome, outcome$State)
View(x)
keeps <- c("State", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure", "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia")
outcome[keeps]
y<-outcome[keeps]
View(y)
#split States from our data
x<- split(y, y$State)
View(x)
outcome <- read.csv("outcome-of-care-measures.csv")
##delete everything except state and outcomes
keeps <- c("State", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure", "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia")
y<-outcome[keeps]
#split States from our data
x<- split(y, y$State)
View(x)
View(x)
head(x)
View(outcome)
View(outcome)
View(outcome)
#split States from our data
x<- split(y, y$State)
}
y<-outcome[keeps]
#split States from our data
x<- split(y, y$State)
}
##read CSV
outcome <- read.csv("outcome-of-care-measures.csv")
##read CSV
outcome <- read.csv("outcome-of-care-measures.csv")
##delete everything except state and outcomes
keeps <- c("State","Hospital.Name", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure", "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia")
y<-outcome[keeps]
#split States from our data
x<- split(y, y$State)
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
library(plyr)
install.packages("plyr")
library(plyr)
View(y)
source("besthospital.R")
best("TX", "heart attack")
source("besthospital.R")
best("TX", "heart attack")
outcome <- read.csv("outcome-of-care-measures.csv")
##delete everything except state and outcomes
keeps <- c("State","Hospital.Name", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure", "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia")
y<-outcome[keeps]
library(plyr)
arrangedData <- arrange(y, y[,3], State)
View(arrangedData)
source("besthospital.R")
best("TX", "heart attack")
arrangedData[2,2]
source("besthospital.R")
best("TX", "heart attack")
source("besthospital.R")
best("TX", "heart attack")
rm(list=ls())
source("besthospital.R")
best("TX", "heart attack")
View(best)
View(best)
View(best)
source("besthospital.R")
best("TX", "heart attack")
warnings()
best <- function(state, outcome) {
##read CSV
outcomes <- read.csv("outcome-of-care-measures.csv")
##delete everything except state and outcomes
keeps <- c("State","Hospital.Name", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure", "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia")
y<-outcomes[keeps]
library(plyr)
if(outcome == "heart attack"){
arrangedData <- arrange(y, y[,3], State)
} else if (outcome == "heart failure"){
arrangedData <- arrange(y,y[,4], State)
} else {
arrangedData <- arrange(y,y[,5], State)
}
for(i in 1:4706){
if(state==arrangedData$State){
arrangedData[i,2]
break
}
}
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
best("TX", "heart failure")
